#include <sys/types.h>
#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define COMMAXLEN 30
#define FAIL -1
#define CHILDPROCESS 0

 main() {
     int waitConst = -1;
     pid_t process = fork();
     if (process == FAIL) {
         perror("Error in fork()");
     }

     if (process != CHILDPROCESS) {
         int check = wait(&waitConst);
         if(check == FAIL){
             perror("Error in wait");
         }
         int exitCode = WEXITSTATUS(waitConst);
         if(exitCode != 0){
             printf("Child process ended unsuccessfully \n");
         }
         printf("return code Ð¾f child = %d \n", exitCode);
         printf("Parent process is on\n");
     } else {
         char command[COMMAXLEN];
         strcpy(command, "cat text.txt");
         if (system(command) == FAIL) {
             perror("Error in system()");
         }
     }
 }
